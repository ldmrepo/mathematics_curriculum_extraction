# 개발용 Docker Compose (전체 구성)
version: '3.8'

services:
  # PostgreSQL - 기존 교육과정 데이터
  postgres:
    image: postgres:15-alpine
    container_name: kg_postgres_dev
    environment:
      POSTGRES_DB: mathematics_curriculum
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ../data:/data:ro
      - ./database/init_scripts:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    networks:
      - kg_network_dev

  # Neo4j - 지식 그래프 저장
  neo4j:
    image: neo4j:5.15-community
    container_name: kg_neo4j_dev
    environment:
      NEO4J_AUTH: neo4j/neo4j123
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_dbms_memory_heap_initial__size: 512m
      NEO4J_dbms_memory_heap_max__size: 1G
      NEO4J_dbms_memory_pagecache_size: 512m
      NEO4J_dbms_jvm_additional: "-Dfile.encoding=UTF-8"
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data_dev:/data
      - neo4j_logs_dev:/logs
      - neo4j_import_dev:/var/lib/neo4j/import
    restart: unless-stopped
    networks:
      - kg_network_dev

  # Redis - 캐싱 및 세션
  redis:
    image: redis:7-alpine
    container_name: kg_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
      - ./database/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - kg_network_dev

  # ChromaDB - 벡터 데이터베이스
  chromadb:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: kg_chromadb_dev
    ports:
      - "8000:8000"
    volumes:
      - chromadb_data_dev:/chroma/chroma
    environment:
      - CHROMA_HOST=0.0.0.0
      - CHROMA_PORT=8000
    restart: unless-stopped
    networks:
      - kg_network_dev

  # pgAdmin - PostgreSQL 관리 도구
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: kg_pgadmin_dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data_dev:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - kg_network_dev

  # Grafana - 모니터링
  grafana:
    image: grafana/grafana:latest
    container_name: kg_grafana_dev
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    volumes:
      - grafana_data_dev:/var/lib/grafana
    restart: unless-stopped
    networks:
      - kg_network_dev

networks:
  kg_network_dev:
    driver: bridge
    name: knowledge_graph_dev_network

volumes:
  postgres_data_dev:
    driver: local
    name: kg_postgres_data_dev
  neo4j_data_dev:
    driver: local
    name: kg_neo4j_data_dev
  neo4j_logs_dev:
    driver: local
    name: kg_neo4j_logs_dev
  neo4j_import_dev:
    driver: local
    name: kg_neo4j_import_dev
  redis_data_dev:
    driver: local
    name: kg_redis_data_dev
  chromadb_data_dev:
    driver: local
    name: kg_chromadb_data_dev
  pgadmin_data_dev:
    driver: local
    name: kg_pgadmin_data_dev
  grafana_data_dev:
    driver: local
    name: kg_grafana_data_dev
